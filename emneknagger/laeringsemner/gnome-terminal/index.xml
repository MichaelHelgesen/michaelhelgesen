<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gnome-Terminal on Mikkes blogg</title>
    <link>/emneknagger/laeringsemner/gnome-terminal/</link>
    <description>Recent content in Gnome-Terminal on Mikkes blogg</description>
    <generator>Hugo</generator>
    <language>nb</language>
    <lastBuildDate>Fri, 16 Aug 2024 11:11:10 +0200</lastBuildDate>
    <atom:link href="/emneknagger/laeringsemner/gnome-terminal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2024-04-30</title>
      <link>/laeringslogg/2024-04-30/</link>
      <pubDate>Tue, 30 Apr 2024 00:00:00 +0000</pubDate>
      <guid>/laeringslogg/2024-04-30/</guid>
      <description>Hugo Endret oppsett av HUGO til «branch»- og «leaf» bundles » for enklere håndtering av bilder og andre filer tilknyttet den enkelte side. På denne måten ligger alle ressurser samme sted som teksten, i motsetning til å ha alle ressurser i en og samme ressurs-mappe, som fort kan vokse seg stor og uoversiktlig. Lærte også om HUGOs bildeprosessor som lar oss manipulere bilder ved skalering, beskjæring, rotering og fargelegging, for å nevne noen.</description>
    </item>
    <item>
      <title>2024-04-27</title>
      <link>/laeringslogg/2024-04-27/</link>
      <pubDate>Sat, 27 Apr 2024 00:00:00 +0000</pubDate>
      <guid>/laeringslogg/2024-04-27/</guid>
      <description>Gnome-Terminal Man kan bruke variabler/funksjoner i terminalen sammen med andre funksjoner. Når jeg skal opprette filer med dato som filnavn kan jeg skrive følgende i terminalen: `hugo new blogg/$(date).md. Hugo Shortcodes er kommandoer vi kan angi i &amp;ldquo;markdown&amp;rdquo;-filer, for å injisere kode i sidene som renderes. De kan kalles på ulike måter: {{ /* Metode 1 */ }} {{ &amp;lt; myShortcode data=&amp;#34;This is data&amp;#34; &amp;gt; }} {{ /* Metode 2 */ }} {{ &amp;lt; myShortcode &amp;gt; }} This is data {{ &amp;lt; /myShortcode &amp;gt;}} myShortcode over henviser til myShortcode.</description>
    </item>
    <item>
      <title>2024-04-21</title>
      <link>/laeringslogg/2024-04-21/</link>
      <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
      <guid>/laeringslogg/2024-04-21/</guid>
      <description>Javascript hasOwnProperty(property): En metode for å sjekke om angit egenskap er definert i gjeldende objekt eller prototype. Object.setPrototypeOf(currentObject, targetObject): Angi et objekt (targetObject) som gjeldende objekt (currentTarget) skal arve fra. Man kan arve metoder og egenskaper fra mange ulike objekter. call(): En metode for å kopiere egenskaper fra en construktor til et annet objekt. Men skal de linkes må det gjøres med Object.setPropertyOf. Det oppstår ikke en automatisk link ved å bruke call.</description>
    </item>
    <item>
      <title>2024-04-20</title>
      <link>/laeringslogg/2024-04-20/</link>
      <pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate>
      <guid>/laeringslogg/2024-04-20/</guid>
      <description>Curl Curl er et kommandolinje-program for overføring av data med URLer. Det ble utviklet av en svenske i 1998, som fortsatt utvikler det. Det er open source. Skriver man curl URL så er GET satt som standard. Ønsker man å sende &amp;ldquo;bearer&amp;rdquo;-nøkkel kan det gjøres på følgende måte: curl URL - H &amp;#34;Accept: application/JSON&amp;#34; - H &amp;#34;Authorization: Bearer {token}&amp;#34; -H står for &amp;ldquo;headers&amp;rdquo; jq For en mer oversiktlig JSON kan vi bruke jq, som er en JSON prosessor, med curl: curl URL | jq &amp;#34;.</description>
    </item>
  </channel>
</rss>
